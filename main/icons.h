#pragma once

//
//  Image data for moveleft32
//

const uint8_t moveleft3232[26 * 4] =
	{
		0x00, 0x1F, 0xE0, 0x00, //            ########
		0x00, 0xFF, 0xFC, 0x00, //         ##############
		0x01, 0xFC, 0xFE, 0x00, //        #######  #######
		0x03, 0xC0, 0x0F, 0x00, //       ####          ####
		0x03, 0x00, 0x03, 0x80, //       ##              ###
		0x00, 0x00, 0x01, 0xC0, //                        ###
		0x00, 0x00, 0x00, 0xE0, //                         ###
		0x00, 0x00, 0x00, 0xE0, //                         ###
		0x00, 0x00, 0x00, 0x60, //                          ##
		0x18, 0x00, 0x00, 0x70, //    ##                    ###
		0x38, 0x00, 0x00, 0x70, //   ###                    ###
		0x78, 0x00, 0x00, 0x70, //  ####                    ###
		0xFF, 0xFE, 0x00, 0x30, // ###############           ##
		0xFF, 0xFE, 0x00, 0x30, // ###############           ##
		0x78, 0x00, 0x00, 0x70, //  ####                    ###
		0x38, 0x00, 0x00, 0x70, //   ###                    ###
		0x18, 0x00, 0x00, 0x70, //    ##                    ###
		0x00, 0x00, 0x00, 0x60, //                          ##
		0x00, 0x00, 0x00, 0xE0, //                         ###
		0x00, 0x00, 0x00, 0xE0, //                         ###
		0x00, 0x00, 0x01, 0xC0, //                        ###
		0x03, 0x00, 0x03, 0x80, //       ##              ###
		0x03, 0xC0, 0x0F, 0x00, //       ####          ####
		0x01, 0xFC, 0xFE, 0x00, //        #######  #######
		0x00, 0xFF, 0xFC, 0x00, //         ##############
		0x00, 0x1F, 0xE0, 0x00, //            ########
};

// Bitmap sizes for moveleft32
const uint8_t moveleft32WidthPages = 4;
const uint8_t moveleft32HeightPixels = 26;

//
//  Image data for moveright32
//

const uint8_t moveright3232[26 * 4] =
	{
		0x00, 0x7F, 0x80, 0x00, //          ########
		0x03, 0xFF, 0xF0, 0x00, //       ##############
		0x07, 0xF3, 0xF8, 0x00, //      #######  #######
		0x0F, 0x00, 0x3C, 0x00, //     ####          ####
		0x1C, 0x00, 0x0C, 0x00, //    ###              ##
		0x38, 0x00, 0x00, 0x00, //   ###
		0x70, 0x00, 0x00, 0x00, //  ###
		0x70, 0x00, 0x00, 0x00, //  ###
		0x60, 0x00, 0x00, 0x00, //  ##
		0xE0, 0x00, 0x01, 0x80, // ###                    ##
		0xE0, 0x00, 0x01, 0xC0, // ###                    ###
		0xE0, 0x00, 0x01, 0xE0, // ###                    ####
		0xC0, 0x07, 0xFF, 0xF0, // ##           ###############
		0xC0, 0x07, 0xFF, 0xF0, // ##           ###############
		0xE0, 0x00, 0x01, 0xE0, // ###                    ####
		0xE0, 0x00, 0x01, 0xC0, // ###                    ###
		0xE0, 0x00, 0x01, 0x80, // ###                    ##
		0x60, 0x00, 0x00, 0x00, //  ##
		0x70, 0x00, 0x00, 0x00, //  ###
		0x70, 0x00, 0x00, 0x00, //  ###
		0x38, 0x00, 0x00, 0x00, //   ###
		0x1C, 0x00, 0x0C, 0x00, //    ###              ##
		0x0F, 0x00, 0x3C, 0x00, //     ####          ####
		0x07, 0xF3, 0xF8, 0x00, //      #######  #######
		0x03, 0xFF, 0xF0, 0x00, //       ##############
		0x00, 0x7F, 0x80, 0x00, //          ########
};

// Bitmap sizes for moveright32
const uint8_t moveright32WidthPages = 4;
const uint8_t moveright32HeightPixels = 26;

//
//  Image data for rapidleft32
//

const uint8_t rapidleft3232[22 * 3] =
	{
		0xFF, 0xFF, 0xFC, // ######################
		0xFF, 0xFF, 0xFC, // ######################
		0xFF, 0xFF, 0xFC, // ######################
		0xFF, 0xFF, 0xFC, // ######################
		0xFF, 0xF1, 0xFC, // ############   #######
		0xFF, 0xE0, 0xFC, // ###########     ######
		0xFF, 0xC1, 0xFC, // ##########     #######
		0xFF, 0x83, 0xFC, // #########     ########
		0xFF, 0x03, 0xFC, // ########      ########
		0xFE, 0x0F, 0xFC, // #######     ##########
		0xFE, 0x1F, 0xFC, // #######    ###########
		0xFE, 0x1F, 0xFC, // #######    ###########
		0xFE, 0x0F, 0xFC, // #######     ##########
		0xFF, 0x03, 0xFC, // ########      ########
		0xFF, 0x83, 0xFC, // #########     ########
		0xFF, 0xC1, 0xFC, // ##########     #######
		0xFF, 0xE0, 0xFC, // ###########     ######
		0xFF, 0xF1, 0xFC, // ############   #######
		0xFF, 0xFF, 0xFC, // ######################
		0xFF, 0xFF, 0xFC, // ######################
		0xFF, 0xFF, 0xFC, // ######################
		0xFF, 0xFF, 0xFC, // ######################
};

// Bitmap sizes for rapidleft32
const uint8_t rapidleft32WidthPages = 3;
const uint8_t rapidleft32HeightPixels = 22;

//
//  Image data for rapidright32
//

const uint8_t rapidright3232[22 * 3] =
	{
		0xFF, 0xFF, 0xFC, // ######################
		0xFF, 0xFF, 0xFC, // ######################
		0xFF, 0xFF, 0xFC, // ######################
		0xFF, 0xFF, 0xFC, // ######################
		0xFE, 0x3F, 0xFC, // #######   ############
		0xFC, 0x1F, 0xFC, // ######     ###########
		0xFE, 0x0F, 0xFC, // #######     ##########
		0xFF, 0x07, 0xFC, // ########     #########
		0xFF, 0x03, 0xFC, // ########      ########
		0xFF, 0xC1, 0xFC, // ##########     #######
		0xFF, 0xE1, 0xFC, // ###########    #######
		0xFF, 0xE1, 0xFC, // ###########    #######
		0xFF, 0xC1, 0xFC, // ##########     #######
		0xFF, 0x03, 0xFC, // ########      ########
		0xFF, 0x07, 0xFC, // ########     #########
		0xFE, 0x0F, 0xFC, // #######     ##########
		0xFC, 0x1F, 0xFC, // ######     ###########
		0xFE, 0x3F, 0xFC, // #######   ############
		0xFF, 0xFF, 0xFC, // ######################
		0xFF, 0xFF, 0xFC, // ######################
		0xFF, 0xFF, 0xFC, // ######################
		0xFF, 0xFF, 0xFC, // ######################
};

// Bitmap sizes for rapidright32
const uint8_t rapidright32WidthPages = 3;
const uint8_t rapidright32HeightPixels = 22;

//
//  Image data for stop32inverted
//

const uint8_t stop3232inverted[24 * 3] =
	{
		0x3F, 0xFF, 0xFC, //   ####################
		0x7F, 0xFF, 0xFE, //  ######################
		0xE0, 0x00, 0x0F, // ###                 ####
		0xC0, 0x00, 0x07, // ##                   ###
		0xC0, 0x00, 0x03, // ##                    ##
		0xC2, 0x00, 0x43, // ##    #          #    ##
		0xC7, 0x00, 0xE3, // ##   ###        ###   ##
		0xC3, 0x81, 0xC3, // ##    ###      ###    ##
		0xC1, 0xC3, 0x83, // ##     ###    ###     ##
		0xC0, 0xE7, 0x03, // ##      ###  ###      ##
		0xC0, 0x7E, 0x03, // ##       ######       ##
		0xC0, 0x3C, 0x03, // ##        ####        ##
		0xC0, 0x3C, 0x03, // ##        ####        ##
		0xC0, 0x7E, 0x03, // ##       ######       ##
		0xC0, 0xE7, 0x03, // ##      ###  ###      ##
		0xC1, 0xC3, 0x83, // ##     ###    ###     ##
		0xC3, 0x81, 0xC3, // ##    ###      ###    ##
		0xC7, 0x00, 0xE3, // ##   ###        ###   ##
		0xC2, 0x00, 0x43, // ##    #          #    ##
		0xC0, 0x00, 0x03, // ##                    ##
		0xC0, 0x00, 0x03, // ##                    ##
		0xE0, 0x00, 0x07, // ###                  ###
		0x7F, 0xFF, 0xFE, //  ######################
		0x3F, 0xFF, 0xFC, //   ####################
};

// Bitmap sizes for stop32inverted
const uint8_t stop32invertedWidthPages = 3;
const uint8_t stop32invertedHeightPixels = 24;

//
//  Image data for stop32
//

const uint8_t stop3232[24*3] =
	{
		0x3F, 0xFF, 0xFC, //   ####################
		0x7F, 0xFF, 0xFE, //  ######################
		0xFF, 0xFF, 0xFF, // ########################
		0xFF, 0xFF, 0xFF, // ########################
		0xFF, 0xFF, 0xFF, // ########################
		0xFD, 0xFF, 0xBF, // ###### ########## ######
		0xF8, 0xFF, 0x1F, // #####   ########   #####
		0xFC, 0x7E, 0x3F, // ######   ######   ######
		0xFE, 0x3C, 0x7F, // #######   ####   #######
		0xFF, 0x18, 0xFF, // ########   ##   ########
		0xFF, 0x81, 0xFF, // #########      #########
		0xFF, 0xC3, 0xFF, // ##########    ##########
		0xFF, 0xC3, 0xFF, // ##########    ##########
		0xFF, 0x81, 0xFF, // #########      #########
		0xFF, 0x18, 0xFF, // ########   ##   ########
		0xFE, 0x3C, 0x7F, // #######   ####   #######
		0xFC, 0x7E, 0x3F, // ######   ######   ######
		0xF8, 0xFF, 0x1F, // #####   ########   #####
		0xFD, 0xFF, 0xBF, // ###### ########## ######
		0xFF, 0xFF, 0xFF, // ########################
		0xFF, 0xFF, 0xFF, // ########################
		0xFF, 0xFF, 0xFF, // ########################
		0x7F, 0xFF, 0xFE, //  ######################
		0x3F, 0xFF, 0xFC, //   ####################
};

// Bitmap sizes for stop32
const uint8_t stop32WidthPages = 3;
const uint8_t stop32HeightPixels = 24;
